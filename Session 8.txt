Steps to prepare First Spring Application [Core Module]
-------------------------------------------------------

1. Download Spring Framework[JARs] from Internet.
2. Prepare Java Project in Eclipse IDE.
3. Prepare Spring Library with the required JAR files.
4. Prepare Bean class.
	--> Bean is a Reusable component, it is a normal Java class having properties and the respective setXXX() and getXXX() methods.
	--> Spring Framework is using POJO [Plain Old Java Object] classes, It will not extend or implement any predefined library except java.io.Serialiable marker interface.
	    
	    UseBean		--> JSP 
	    ActionForm/FormBean	--> Struts
	    BackingBean		--> JSF
	    POJO		--> Hibernate
	    POJO 		--> Spring

	--> In Spring Framework, POJO class must be a Java bean class, it must be declared as public, non abstract and not final.
	    a) The main intension of declaring Bean as public is to make available to Spring Framework inorder to create Objects.
	    b) In Spring Framework Application, Spring Framework must create objects for the Bean class, it must be non abstract.
	    c) In Spring Framework Application, If we to extend one bean class to another class as per the requirement and as per improving code reusebility we must declare bean 
	       class non final.

	--> In Bean class, we must declare properties as per the requirements and we must provide a seperate set of setXXX() method and getXXX() method.
	--> In Bean class, we must declare all properties as private properties. we must declare all methods as public methods inorder to improve "Encapsulation"
	--> In Bean class, if we want to provide constructor, then we have to provide constructors, but it must be public and 0-arg constructor, because while instantiating
	    bean class, Spring Framework will search and execute 0-arg constructor and public constructor.
	--> If we want to generate hashCode values of the bean objects in our view then we have to override hashCode() method. 

5. Prepare Spring Configuration file with Bean configuration.
	--> It is an XML file, it will include all beans configuration details like name of the Bean class, identity of the Bean class, properties and their values of the Bean class.
	--> The main intension of Bean configuration in spring configuration file is to create Bean object by spring framework.
	--> Spring Framework is able to allow any name to the configuration file, but the suggestible name is "applicationContext.xml"

	<beans ----XSD---->
		<bean id="--" class="--" />
	</beans>

	id: It will take a variable name as an identity to the generated Bean Object.
	class: It will take fully qualified name of the respective Bean class.

	<beans ----XSD---->
		<bean id="helloBean" class="com.company.beans.HelloBean" />
	</beans>
		


6. Prepare Test Application.

